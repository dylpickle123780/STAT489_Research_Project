
Running the basic GWR model
```{r}
#Load
library(GWmodel)
library(tidyverse)
library(sf)
library(sp)
library(ggfortify)
load("../Data/FMR_shape_data.Rdata")

#Turning to spatial
model_data = joined_data %>% 
  as_Spatial()

#Selecting Bandwidth
model_bandwidth = bw.gwr(model_data$price ~ ., data = model_data,
                         kernel = "exponential", parallel.method = "omp")

#run model with calculated bandwidth and return model
model_gwr = gwr.basic(model_data$price ~ ., data = model_data,
                      bw = model_bandwidth, kernel = "exponential", 
                      parallel.method = "omp")

```

```{r}
#Source in functions for plotting
source("../Functions/GWR_implementation.R")

plotting_GWR_predicted(model_gwr)

```
Model does a good job of highlighting the large increase in price in coastal areas such as California, Florida, and New York.

```{r}
plotting_GWR_residuals(model_gwr)

```
Most areas seem to be predicting rent price fairly decently but some areas that are inland of the coastal counties seem to be affected by them. A population variable would likely help solve this problem and will be implemented next.

```{r}
plotting_GWR_bedrooms(model_gwr)
```
A lot of the Betas for bedrooms seem to be negative. This is a problem as the variable should be positive given an apartment with more bedrooms should increase the price. This could be due to not having enough variables in the model. Also there is only data for 986 counties. I do not know if the solution for this is finding more data or trying to continue as is, but the model is likely suffering in certain counties from not having data from enough neighbors to make an accurate prediction.

```{r}
#creating training split and predictions for gwr
set.seed("123780")

gwr_split = createDataPartition(joined_data$price,
                                       p = 0.8,
                                       )[[1]]

apartment_train = joined_data[gwr_split,]
apartment_test = joined_data[-gwr_split,]

#Turning to spatial
model_data = apartment_train %>% 
  as_Spatial()

test_data = apartment_test %>% 
  as_Spatial()
#Selecting Bandwidth
model_bandwidth = bw.gwr(model_data$price ~ ., data = model_data,
                         kernel = "exponential", parallel.method = "omp")

#run model with calculated bandwidth and return model
model_gwr = gwr.basic(model_data$price ~ ., data = model_data,
                      bw = model_bandwidth, kernel = "exponential", 
                      parallel.method = "omp")

gwr_predictions = gwr.predict(model_data$price ~ ., model_data, test_data, 
            model_bandwidth, kernel = "exponential")

gwr_rmse = RMSE(gwr_predictions$SDF$prediction, test_data$price)
gwr_mae = MAE(gwr_predictions$SDF$prediction, test_data$price)
gwr_mse = mean((gwr_predictions$SDF$prediction - test_data$price)^2)

gwr_comparison_metrics = c(gwr_rmse, gwr_mae, gwr_mse)
```

